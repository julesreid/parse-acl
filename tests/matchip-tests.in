# Test matching of subnets
#
# This tests the match_subnet() function for correct behavior.
#
# The arguments are:
#   - subnet to test
#   - subnet to match
#   - minimum prefix length to match
#   - maximum prefix length to match

# Original unorganized tests
10.14.0.0/15 10.15.100.5 15 24	yes
10.14.0.0/15 10.15.100.5 16 24	no
10.15.0.0/16 10.15.100.5 16 24	yes
10.15.100.0/24 10.15.100.5 16 24	yes
10.15.100.0/25 10.15.100.5 16 24	no
10.15.100.5/32 10.15.100.5 16 24	no
10.15.200.0/24 10.15.100.5 16 24	no
0.0.0.0/0 10.2.127.61 0 32	yes
0.0.0.0/0 10.2.127.61 0 31	yes
0.0.0.0/0 10.2.127.61 9 32	no
10.0.0.0/8 10.2.127.61 9 32	no
10.2.0.0/16 10.2.127.61 9 32	yes
10.2.127.0/24 10.2.127.61 9 32	yes
10.2.127.61/32 10.2.127.61 9 32	yes

# Only exact matches for a single IP address
0.0.0.0/0 10.2.127.61 32 32	no
10.0.0.0/8 10.2.127.61 32 32	no
10.2.0.0/16 10.2.127.61 32 32	no
10.2.127.0/24 10.2.127.61 32 32	no
10.2.127.61/32 10.2.127.61 32 32	yes

# A /24 subnet, but not all matches
0.0.0.0/0      10.2.127.0/24 0 32	yes
0.0.0.0/0      10.2.127.0/24 1 32	no
10.0.0.0/8     10.2.127.0/24 7 32	yes
10.0.0.0/8     10.2.127.0/24 8 32	yes
10.0.0.0/8     10.2.127.0/24 9 32	no
10.2.0.0/16    10.2.127.0/24 15 32	yes
10.2.0.0/16    10.2.127.0/24 16 32	yes
10.2.0.0/16    10.2.127.0/24 17 32	no
10.2.127.0/24  10.2.127.0/24 23 32	yes
10.2.127.0/24  10.2.127.0/24 24 32	yes
10.2.127.0/24  10.2.127.0/24 25 32	no
10.2.127.61/32 10.2.127.0/24 24 24	no
10.2.127.61/32 10.2.127.0/24 31 32	yes
10.2.127.61/32 10.2.127.0/24 32 32	yes

### Some examples of a prefix list from the web document found here:
### http://blog.internetworkexpert.com/2007/12/26/how-do-prefix-lists-work/
#
1.2.3.0/24 1.2.3.0/24 24 24	yes
1.2.0.0/24 1.2.3.0/24 24 24	no
1.2.3.4/32 1.2.3.0/24 24 24	no
# Not in the document, but my clarification about how subnet mask is
# significant (i.e., 1.2.0.0/16 does not equal 1.2.0.0/24)
1.2.0.0/16 1.2.0.0/24 24 32	no
1.2.0.0/24 1.2.0.0/24 24 32	yes
1.2.0.24/32 1.2.0.0/24 24 32	yes
#
0.0.0.0/0  1.2.3.0/24 24 32	no
1.0.0.0/8  1.2.3.0/24 24 32	no
1.2.0.0/16 1.2.3.0/24 24 32	no
1.2.3.0/24 1.2.3.0/24 24 32	yes
1.2.3.4/32 1.2.3.0/24 24 32	yes
#
0.0.0.0/0  0.0.0.0/0 0 32	yes
1.0.0.0/8  0.0.0.0/0 0 32	yes
1.2.0.0/16 0.0.0.0/0 0 32	yes
1.2.3.0/24 0.0.0.0/0 0 32	yes
1.2.3.4/32 0.0.0.0/0 0 32	yes
#
# Only match the default route
0.0.0.0/0  0.0.0.0/0 0 0	yes
1.0.0.0/8  0.0.0.0/0 0 0	no
1.2.0.0/16 0.0.0.0/0 0 0	no
1.2.3.0/24 0.0.0.0/0 0 0	no
1.2.3.4/32 0.0.0.0/0 0 0	no
#
0.0.0.0/0   10.0.0.0/8 21 29	no
10.0.0.0/8  10.0.0.0/8 21 29	no
10.2.0.0/16 10.0.0.0/8 21 29	no
10.2.3.0/24 10.0.0.0/8 21 29	yes
10.2.3.4/32 10.0.0.0/8 21 29	no
#
0.0.0.0/0   0.0.0.0/1 8 8	no
0.0.0.0/8   0.0.0.0/1 8 8	yes
1.0.0.0/8   0.0.0.0/1 8 8	yes
1.0.0.0/16  0.0.0.0/1 8 8	no
2.0.0.0/8   0.0.0.0/1 8 8	yes
2.0.0.0/16  0.0.0.0/1 8 8	no
10.0.0.0/8  0.0.0.0/1 8 8	yes
127.0.0.0/8 0.0.0.0/1 8 8	yes
128.0.0.0/8 0.0.0.0/1 8 8	no
255.0.0.0/8 0.0.0.0/1 8 8	no
#
# Not a valid prefix-list entry (because 8 < 24), but valid here
#
# Error message on a Cisco router:
# % Invalid prefix range for 10.0.0.0/8, make sure: len < ge-value <= le-value
0.0.0.0/0  1.2.3.0/24 8 32	no
1.0.0.0/8  1.2.3.0/24 8 32	yes
1.2.0.0/16 1.2.3.0/24 8 32	yes
1.2.3.0/24 1.2.3.0/24 8 32	yes
1.2.3.4/32 1.2.3.0/24 8 32	yes

### Network blocks used to identify local ISPs
#
# Hawtel-DSL
# NET-72-234-0-0-1
#72.234.0.0/15
# NET-72-253-0-0-1
#72.253.0.0/16
#
# OTWC-Road_Runner
# NET-24-160-0-0-1-1
#24.160.0.0/13
# NET-24-160-0-0-1-2
#24.168.0.0/14
# NET-24-160-0-0-1-3
#24.170.0.0/17
# NET-76-80-0-0-1
#76.80.0.0/12
#
# SystemMetrics
# NET-66-175-64-0-1
#66.175.64.0/19
# NET-66-135-224-0-1
#66.135.224.0/19

### Example of BGP policy
#
# Allow only networks that are /24 or larger
0.0.0.0/0  0.0.0.0/0 0 24	yes
1.0.0.0/8  0.0.0.0/0 0 24	yes
1.2.0.0/16 0.0.0.0/0 0 24	yes
1.2.3.0/24 0.0.0.0/0 0 24	yes
1.2.3.4/32 0.0.0.0/0 0 24	no
#
# Allow only networks that are /24 or larger only in 10 network
0.0.0.0/0   10.0.0.0/8 8 24	no
1.0.0.0/8   10.0.0.0/8 8 24	no
1.2.0.0/16  10.0.0.0/8 8 24	no
1.2.3.0/24  10.0.0.0/8 8 24	no
1.2.3.4/32  10.0.0.0/8 8 24	no
10.0.0.0/8  10.0.0.0/8 8 24	yes
10.0.0.0/7  10.0.0.0/8 8 24	no
10.2.0.0/16 10.0.0.0/8 8 24	yes
10.2.3.0/24 10.0.0.0/8 8 24	yes
10.2.3.0/26 10.0.0.0/8 8 24	no
10.2.3.0/28 10.0.0.0/8 8 24	no
10.2.3.4/32 10.0.0.0/8 8 24	no

### Network
#
# Match the main 2nd octet networks
0.0.0.0      10.0.0.0/8 16 16	no
10.0.0.0/8   10.0.0.0/8 16 16	no
10.0.0.0/16  10.0.0.0/8 16 16	yes
10.1.0.0/16  10.0.0.0/8 16 16	yes
10.1.3.0/24  10.0.0.0/8 16 16	no
10.2.0.0/21  10.0.0.0/8 16 16	no
10.2.0.0/16  10.0.0.0/8 16 16	yes
10.2.64.0/21 10.0.0.0/8 16 16	no
10.3.0.0/16  10.0.0.0/8 16 16	yes
10.3.1.0/24  10.0.0.0/8 16 16	no
10.4.0.0/16  10.0.0.0/8 16 16	yes
10.4.64.0/24 10.0.0.0/8 16 16	no

# Do not match default route
0.0.0.0/0      0.0.0.0/0 1 32	no
10.0.0.0/8     0.0.0.0/0 1 32	yes
10.12.0.0/14   0.0.0.0/0 1 32	yes
10.14.0.0/15   0.0.0.0/0 1 32	yes
10.15.0.0/16   0.0.0.0/0 1 32	yes
10.15.100.0/24 0.0.0.0/0 1 32	yes
10.15.100.0/25 0.0.0.0/0 1 32	yes
10.15.100.5/32 0.0.0.0/0 1 32	yes
10.15.200.0/24 0.0.0.0/0 1 32	yes
10.2.0.0/16    0.0.0.0/0 1 32	yes
10.2.127.0/24  0.0.0.0/0 1 32	yes
10.2.127.61/32 0.0.0.0/0 1 32	yes

# Match any single host
0.0.0.0/0      0.0.0.0/0 32 32	no
10.0.0.0/8     0.0.0.0/0 32 32	no
10.15.0.0/16   0.0.0.0/0 32 32	no
10.15.100.0/24 0.0.0.0/0 32 32	no
10.15.100.0/25 0.0.0.0/0 32 32	no
10.15.100.5/32 0.0.0.0/0 32 32	yes
10.15.200.0/24 0.0.0.0/0 32 32	no
10.2.0.0/16    0.0.0.0/0 32 32	no
10.2.127.0/24  0.0.0.0/0 32 32	no
10.2.127.61/32 0.0.0.0/0 32 32	yes
1.2.3.4/32     0.0.0.0/0 32 32	yes
10.2.3.4/32    0.0.0.0/0 32 32	yes

# Find supernets of 10.2.0.0/16 without using contains
# XXX incorrect -- matches 11.0.0.0/8 for instance
#0.0.0.0/0    0  4
#8.0.0.0/5    4  6
#10.0.0.0/7   7 14
#10.2.0.0/15 15 16

# Some examples from a web article
10.0.0.0/8     10.0.0.0/24 24 24	no
10.0.0.0/16    10.0.0.0/24 24 24	no
10.0.0.0/24    10.0.0.0/24 24 24	yes
10.0.0.0/32    10.0.0.0/24 24 24	no
#
0.0.0.0/0      0.0.0.0/0 0 32	yes
0.0.0.0/8      0.0.0.0/0 0 32	yes
0.0.0.0/16     0.0.0.0/0 0 32	yes
0.0.0.0/24     0.0.0.0/0 0 32	yes
0.0.0.0/32     0.0.0.0/0 0 32	yes
#
0.0.0.0/0      10.0.0.0/24 24 30	no
0.0.0.0/8      10.0.0.0/24 24 30	no
0.0.0.0/16     10.0.0.0/24 24 30	no
0.0.0.0/24     10.0.0.0/24 24 30	no
0.0.0.0/32     10.0.0.0/24 24 30	no
#
10.0.0.0/8     10.0.0.0/8 16 32	no
10.0.0.0/16    10.0.0.0/8 16 32	yes
10.0.0.0/24    10.0.0.0/8 16 32	yes
10.0.0.0/32    10.0.0.0/8 16 32	yes
#
10.0.0.0/8     10.0.0.0/8 16 24	no
10.0.0.0/16    10.0.0.0/8 16 24	yes
10.0.0.0/24    10.0.0.0/8 16 24	yes
10.0.0.0/32    10.0.0.0/8 16 24	no
#
10.0.0.0/8     10.0.0.0/10 10 10	no
10.0.0.0/8     10.0.0.0/11 11 11	no
10.0.0.0/8     10.0.0.0/12 12 12	no
#
0.0.0.0/0      10.16.0.0/12 12 12	no
0.0.0.0/0      10.32.0.0/12 12 12	no
0.0.0.0/0      10.48.0.0/12 12 12	no
0.0.0.0/0      10.64.0.0/12 12 12	no
#
0.0.0.0/0      10.8.0.0/13 13 13	no
#
0.0.0.0/0      255.255.255.255/32 0 32	yes
1.0.0.0/8      255.255.255.255/32 0 32	no
0.0.0.0/1      255.255.255.255/32 0 32	no
128.0.0.0/1    255.255.255.255/32 0 32	yes
0.0.0.0/2      255.255.255.255/32 0 32	no
64.0.0.0/2     255.255.255.255/32 0 32	no
128.0.0.0/2    255.255.255.255/32 0 32	no
192.0.0.0/2    255.255.255.255/32 0 32	yes
0.0.0.0/3      255.255.255.255/32 0 32	no
32.0.0.0/3     255.255.255.255/32 0 32	no
64.0.0.0/3     255.255.255.255/32 0 32	no
96.0.0.0/3     255.255.255.255/32 0 32	no
128.0.0.0/3    255.255.255.255/32 0 32	no
160.0.0.0/3    255.255.255.255/32 0 32	no
192.0.0.0/3    255.255.255.255/32 0 32	no
224.0.0.0/3    255.255.255.255/32 0 32	yes
255.255.255.0/24    255.255.255.255/32 0 32	yes
255.255.255.0/25    255.255.255.255/32 0 32	no
255.255.255.0/32    255.255.255.255/32 0 32	no
255.255.255.252/30  255.255.255.255/32 0 32	yes
255.255.255.252/31  255.255.255.255/32 0 32	no
255.255.255.252/32  255.255.255.255/32 0 32	no
255.255.255.254/31  255.255.255.255/32 0 32	yes
255.255.255.254/32  255.255.255.255/32 0 32	no
255.255.255.255/32  255.255.255.255/32 0 32	yes
#
0.0.0.0/0      10.1.2.0/23 22 32	no

# Given a single IP address (e.g., 172.31.255.250), find all subnets
# that match it.  This is specified by '172.31.255.250 ge 0', and is
# useful for finding all matching ACLs or IP routes.
172.31.255.250/32 172.31.255.250/32 32 32	yes
172.31.255.250/32 172.31.255.250/31 31 32	yes
172.31.255.250/32 172.31.255.248/30 30 32	yes
172.31.255.250/32 172.31.255.248/29 29 32	yes
172.31.255.250/32 172.31.255.240/28 28 32	yes
172.31.255.250/32 172.31.255.224/27 27 32	yes
172.31.255.250/32 172.31.255.192/26 26 32	yes
172.31.255.250/32 172.31.255.128/25 25 32	yes
172.31.255.250/32   172.31.255.0/24 24 32	yes
172.31.255.250/32   172.31.254.0/23 23 32	yes
172.31.255.250/32   172.31.252.0/22 22 32	yes
172.31.255.250/32   172.31.248.0/21 21 32	yes
172.31.255.250/32   172.31.240.0/20 20 32	yes
172.31.255.250/32   172.31.224.0/19 19 32	yes
172.31.255.250/32   172.31.192.0/18 18 32	yes
172.31.255.250/32   172.31.128.0/17 17 32	yes
172.31.255.250/32     172.31.0.0/16 16 32	yes
172.31.255.250/32     172.30.0.0/15 15 32	yes
172.31.255.250/32     172.28.0.0/14 14 32	yes
172.31.255.250/32     172.24.0.0/13 13 32	yes
172.31.255.250/32     172.16.0.0/12 12 32	yes
172.31.255.250/32      172.0.0.0/11 11 32	yes
172.31.255.250/32      172.0.0.0/10 10 32	yes
172.31.255.250/32       172.0.0.0/9  9 32	yes
172.31.255.250/32       172.0.0.0/8  8 32	yes
172.31.255.250/32       172.0.0.0/7  7 32	yes
172.31.255.250/32       172.0.0.0/6  6 32	yes
172.31.255.250/32       168.0.0.0/5  5 32	yes
172.31.255.250/32       160.0.0.0/4  4 32	yes
172.31.255.250/32       160.0.0.0/3  3 32	yes
172.31.255.250/32       128.0.0.0/2  2 32	yes
172.31.255.250/32       128.0.0.0/1  1 32	yes
172.31.255.250/32         0.0.0.0/0  0 32	yes

# vi: ts=24:
